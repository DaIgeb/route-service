service: tour

plugins:
 - serverless-webpack

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    STAGE: ${opt:stage, self:provider.stage}
    COGNITO_POOL: eu-central-1_20qZMtjpi
    AUTH0_CLIENT_ID: xVHE5rGaRQcoJ-NAwjv5cBXQeToVXkUC
    AUTH0_CLIENT_SECRET: wtlJ-RuXS6TJ9hU2gsAsY69An2lfJi3bcNeC0P9DggP9QRMv-N9Ert60nqUf77jE
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
  region: eu-central-1

functions:
  auth:
    handler: handler.auth
  create:
    handler: handler.create
    events:
      - http:
          path: /
          method: post
          cors: true
          authorizer: auth
  list:
    handler: handler.list
    events:
      - http:
          path: /
          method: get
          cors: true
          authorizer: auth  
  get:
    handler: handler.get
    events:
      - http:
          path: /{id}
          method: get
          cors: true
          authorizer: auth
  update:
    handler: handler.update
    events:
      - http:
          path: /{id}
          method: put
          cors: true
          authorizer: auth
  delete:
    handler: handler.remove
    events:
      - http:
          path: /{id}
          method: delete
          cors: true
          authorizer: auth

resources:
  Resources:
    ToursDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
